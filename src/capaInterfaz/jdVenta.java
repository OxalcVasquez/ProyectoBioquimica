/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package capaInterfaz;

import capaInterfaz.Componentes.ColorTabla;
import capaInterfaz.Componentes.RoundedPanel;
import capaInterfaz.Componentes.ComboMed;
import capaInterfaz.Componentes.MensajeMed;
import capaNegocio.*;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.MatteBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultFormatter;

/**
 *
 * @author Jordan Oxalc VÃ¡squez Fernandez
 */
public class jdVenta extends javax.swing.JDialog {

    private int posX = 0, posY = 0;
    clsTrabajador objTrabajador = new clsTrabajador();
    clsCliente objCliente = new clsCliente();
    clsVenta objVenta = new clsVenta();
    clsProducto objPro = new clsProducto();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    ResultSet rsProducto;
    ArrayList listaDetalle = new ArrayList();
    private double precio;

    LocalDateTime locaDate = LocalDateTime.now();
    int horas = locaDate.getHour();
    int minutos = locaDate.getMinute();
    int segundos = locaDate.getSecond();
    String horaActual = horas + ":" + minutos + ":" + segundos;

    /**
     * Creates new form
     */
    public jdVenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        getContentPane().setBackground(new Color(0, 0, 0, 0));
        getRootPane().setOpaque(false);
        setBackground(new Color(0, 0, 0, 0));
        cboTipo.setUI(ComboMed.createUI(cboTipo));
        cboTipoDoc.setUI(ComboMed.createUI(cboTipoDoc));
        cboTrabajador.setUI(ComboMed.createUI(cboTipoDoc));

        tblDetalle.getTableHeader().setDefaultRenderer(new ColorTabla());
        btnBuscarCliente.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnBuscarProducto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnBuscarVenta.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnAgregarPro.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        btnEliminarProducto.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        tblDatos.getTableHeader().setDefaultRenderer(new ColorTabla());

        txtPrecio.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                actualizarDetalle();

            }

            public void removeUpdate(DocumentEvent e) {
                actualizarDetalle();

            }

            public void insertUpdate(DocumentEvent e) {
                actualizarDetalle();
                verficarCantidadMaxima();

            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new RoundedPanel();
        botonMedGradiente1 = new capaInterfaz.Componentes.BotonMedGradiente();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtProducto = new capaInterfaz.Componentes.TextoMed();
        jLabel14 = new javax.swing.JLabel();
        txtTotal = new capaInterfaz.Componentes.TextoMed();
        jLabel16 = new javax.swing.JLabel();
        txtPrecio = new capaInterfaz.Componentes.TextoMed();
        btnBuscar3 = new capaInterfaz.Componentes.BotonMedGradiente();
        botonMedGradiente2 = new capaInterfaz.Componentes.BotonMedGradiente();
        botonMedGradiente3 = new capaInterfaz.Componentes.BotonMedGradiente();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        roundedPanel1 = new capaInterfaz.Componentes.RoundedPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNroComprobante = new capaInterfaz.Componentes.TextoMed();
        txtNumero = new javax.swing.JTextField();
        cboTipo = new javax.swing.JComboBox<>();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnBuscarVenta = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cboTipoDoc = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        txtCliente = new capaInterfaz.Componentes.TextoMed();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        cboTrabajador = new javax.swing.JComboBox<>();
        jsCantidad = new capaInterfaz.Componentes.spinnerMed();
        txtNroDocumento = new capaInterfaz.Componentes.TextoMed();
        txtSubTotal = new capaInterfaz.Componentes.TextoMed();
        txtIGV = new capaInterfaz.Componentes.TextoMed();
        btnNuevo = new capaInterfaz.Componentes.BotonMedGradiente();
        btnBuscarCliente = new javax.swing.JLabel();
        btnBuscarProducto = new javax.swing.JLabel();
        btnAgregarPro = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnEliminarProducto = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        botonMedGradiente4 = new capaInterfaz.Componentes.BotonMedGradiente();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonMedGradiente1.setText("Modificar");
        botonMedGradiente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMedGradiente1ActionPerformed(evt);
            }
        });
        jPanel2.add(botonMedGradiente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 550, 170, -1));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDatos.setRowHeight(27);
        tblDatos.setSelectionBackground(new java.awt.Color(16, 171, 131));
        tblDatos.setShowVerticalLines(false);
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 780, 220));

        jLabel11.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel11.setText("Producto:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        txtProducto.setEditable(false);
        txtProducto.setForeground(new java.awt.Color(0, 0, 0));
        txtProducto.setText("");
        txtProducto.setPlaceholder("");
        txtProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductoActionPerformed(evt);
            }
        });
        jPanel2.add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 350, -1));

        jLabel14.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel14.setText("Nro Documento:");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, -1, -1));

        txtTotal.setEditable(false);
        txtTotal.setText("");
        txtTotal.setPlaceholder("");
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        jPanel2.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 450, 80, -1));

        jLabel16.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel16.setText("Cantidad:");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        txtPrecio.setEditable(false);
        txtPrecio.setForeground(new java.awt.Color(0, 0, 0));
        txtPrecio.setText("");
        txtPrecio.setPlaceholder("");
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });
        jPanel2.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 110, -1));

        btnBuscar3.setText("Nuevo ");
        btnBuscar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar3ActionPerformed(evt);
            }
        });
        jPanel2.add(btnBuscar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 270, -1, -1));

        botonMedGradiente2.setText("Ver comprobante");
        botonMedGradiente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMedGradiente2ActionPerformed(evt);
            }
        });
        jPanel2.add(botonMedGradiente2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 720, 190, -1));

        botonMedGradiente3.setText("Eliminar");
        botonMedGradiente3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMedGradiente3ActionPerformed(evt);
            }
        });
        jPanel2.add(botonMedGradiente3, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 610, 170, -1));

        jLabel18.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel18.setText("Precio:");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jLabel21.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel21.setText("Total");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 450, -1, -1));

        roundedPanel1.setBackground(new java.awt.Color(16, 171, 131));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NÂ°:");

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("NÂ° Comp:");

        txtNroComprobante.setText("");
        txtNroComprobante.setPlaceholder("");
        txtNroComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroComprobanteActionPerformed(evt);
            }
        });

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });

        cboTipo.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        cboTipo.setForeground(new java.awt.Color(51, 51, 51));
        cboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boleta", "Boleta ElectrÃ³nica", "Factura", "Factura ElectrÃ³nica" }));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Fecha:");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Tipo Comp:");

        btnBuscarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscarOxalc.png"))); // NOI18N
        btnBuscarVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarVentaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7)
                .addGap(12, 12, 12)
                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarVenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(txtNroComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(btnBuscarVenta)
                            .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNroComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.add(roundedPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1050, 70));

        jLabel19.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel19.setText("Cliente:");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 230, -1, -1));

        cboTipoDoc.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        cboTipoDoc.setForeground(new java.awt.Color(51, 51, 51));
        cboTipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Pasaporte", "Carnet ExtranjerÃ­a", "Libreta Militar" }));
        jPanel2.add(cboTipoDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 120, 180, -1));

        jLabel20.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel20.setText("Tipo Documento:");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, -1, -1));

        txtCliente.setText("");
        txtCliente.setPlaceholder("");
        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        jPanel2.add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 220, 300, -1));

        jLabel22.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel22.setText("Subtotal:");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, -1, -1));

        jLabel23.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel23.setText("IGV:");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 410, -1, -1));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad", "Subtotal"
            }
        ));
        tblDetalle.setRowHeight(27);
        tblDetalle.setSelectionBackground(new java.awt.Color(16, 171, 131));
        tblDetalle.setShowVerticalLines(false);
        tblDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetalle);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 520, 160));

        jLabel24.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel24.setText("Trabajador:");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 720, -1, -1));

        cboTrabajador.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        cboTrabajador.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(cboTrabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 720, 280, 40));
        jPanel2.add(jsCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        txtNroDocumento.setText("");
        txtNroDocumento.setPlaceholder("");
        txtNroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroDocumentoActionPerformed(evt);
            }
        });
        jPanel2.add(txtNroDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 170, 180, -1));

        txtSubTotal.setEditable(false);
        txtSubTotal.setText("");
        txtSubTotal.setPlaceholder("");
        txtSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubTotalActionPerformed(evt);
            }
        });
        jPanel2.add(txtSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 80, -1));

        txtIGV.setEditable(false);
        txtIGV.setText("");
        txtIGV.setPlaceholder("");
        txtIGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIGVActionPerformed(evt);
            }
        });
        jPanel2.add(txtIGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 410, 80, -1));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel2.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 490, 170, -1));

        btnBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarClienteMouseClicked(evt);
            }
        });
        jPanel2.add(btnBuscarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 170, -1, -1));

        btnBuscarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarProductoMouseClicked(evt);
            }
        });
        jPanel2.add(btnBuscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, -1, -1));

        btnAgregarPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/mas.png"))); // NOI18N
        btnAgregarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarProMouseClicked(evt);
            }
        });
        jPanel2.add(btnAgregarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 300, -1, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/eliminar.png"))); // NOI18N
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 610, -1, 30));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cerrar.png"))); // NOI18N
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 670, -1, 30));

        btnEliminarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/menos.png"))); // NOI18N
        btnEliminarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarProductoMouseClicked(evt);
            }
        });
        jPanel2.add(btnEliminarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, -1));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/editar.png"))); // NOI18N
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 550, -1, 30));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/abrirVentana.png"))); // NOI18N
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 270, -1, -1));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/agregar.png"))); // NOI18N
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 490, -1, 30));

        botonMedGradiente4.setText("Salir");
        botonMedGradiente4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMedGradiente4ActionPerformed(evt);
            }
        });
        jPanel2.add(botonMedGradiente4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 670, 170, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 1070, 780));

        jPanel1.setBackground(new java.awt.Color(16, 171, 131));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GESTIONAR VENTA");

        btnSalir.setBackground(new java.awt.Color(255, 255, 255));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Exit.png"))); // NOI18N
        btnSalir.setBorder(null);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setFocusable(false);
        btnSalir.setPreferredSize(new java.awt.Dimension(49, 25));
        btnSalir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Exit (2)_1.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(454, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(344, 344, 344)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 158));
        jPanel1.setBorder(BorderFactory.createMatteBorder(3, 3, 0, 3, Color.GRAY));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1200, 750));
        jPanel3.setBorder(BorderFactory.createMatteBorder(0, 3, 3, 3, Color.GRAY));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        setLocation(evt.getXOnScreen() - posX, evt.getYOnScreen() - posY);
    }//GEN-LAST:event_formMouseDragged

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    public void listarTrabajador() {
        ResultSet rsTrabajador = null;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        cboTrabajador.setModel(model);

        try {
            rsTrabajador = objTrabajador.listarTrabajador();
            while (rsTrabajador.next()) {
                model.addElement(rsTrabajador.getString("codtrabajador") + "-" + rsTrabajador.getString("nombres") + " " + rsTrabajador.getString("apellidos"));
            }
        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }

    }

    private void eliminarProducto() {
        for (int i = 0; i < listaDetalle.size(); i++) {
            Object[] datos = (Object[]) listaDetalle.get(i);
            if (datos[0].equals(txtProducto.getText())) {
                listaDetalle.remove(i);
                new MensajeMed().mostrar(this, "Producto eliminado correctamente", 2);
                listarDetalle(listaDetalle);
            }

        }
        actualizarTotal();
        
        if (tblDetalle.getRowCount() == 0) {
            txtIGV.setText("");
            txtSubTotal.setText("");
            txtTotal.setText("");
        }

    }
    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void setPrecio(Double precio) {
        this.precio = precio;
    }

    public Double getPrecio() {
        return this.precio;
    }

    private void precioProducto(ResultSet rsPrdo) {
        try {
            //Productoooo guardar
            rsProducto = rsPrdo;
            if (rsPrdo.next()) {
                setPrecio(rsPrdo.getDouble("precioventa"));
            }
            jsCantidad.setPrecio(txtPrecio, precio);

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }
    }

    private void buscarProducto(ResultSet rsPrdo) {
        try {
            //Productoooo guardar
            rsProducto = rsPrdo;
            if (rsPrdo.next()) {
                txtProducto.setText(rsPrdo.getString("nombre"));
                jsCantidad.setMaximo(rsPrdo.getInt("stock"));
                jsCantidad.setCantidad(1);
                setPrecio(rsPrdo.getDouble("precioventa"));
                txtPrecio.setText(String.valueOf(rsPrdo.getDouble("precioventa")));

            }
            jsCantidad.setPrecio(txtPrecio, precio);

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }
    }

    private void buscarProducto() {
        try {
            jdBuscarProductos objFrmBuscar = new jdBuscarProductos(null, true);
            objFrmBuscar.setVisible(true);
            buscarProducto(objFrmBuscar.rsProducto);
//            txtProducto.setText(objFrmBuscar.producto);
//            rsProducto = objFrmBuscar.rsProducto;
//            if (objFrmBuscar.rsProducto.next()) {
//                jsCantidad.setMaximo(rsProducto.getInt("stock"));
//                jsCantidad.setCantidad(1);
//                setPrecio(objFrmBuscar.rsProducto.getDouble("precioventa"));
//                txtPrecio.setText(String.valueOf(objFrmBuscar.rsProducto.getDouble("precioventa")));
//
//            }
//            jsCantidad.setPrecio(txtPrecio, precio);

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }
    }

    public void listarDetalle(ArrayList lista) {
        DefaultTableModel modelo = new DefaultTableModel();
//        modelo.addColumn("Cod.");
        modelo.addColumn("Producto");
        modelo.addColumn("Precio");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Subtotal");
        Object[] datos = new Object[4];
        for (int i = 0; i < lista.size(); i++) {
            datos = (Object[]) lista.get(i);
            modelo.addRow(datos);

        }

        tblDetalle.setModel(modelo);
        alinearTabla(tblDetalle);

    }

    private void verficarCantidadMaxima() {
        if (jsCantidad.getCantidad() == jsCantidad.getMaximo()) {
            new MensajeMed().mostrar(this, "Ya alcanzo el stock maximo del producto seleccionado", 0);
        }
    }

    public ArrayList datosDetalle(ResultSet rsDetalle) {
        ArrayList detalle = new ArrayList();

        try {
            while (rsDetalle.next()) {
                Object detalleDatos[] = new Object[5];
                detalleDatos[0] = rsDetalle.getString("producto");
                detalleDatos[1] = rsDetalle.getDouble("precio");
                detalleDatos[2] = rsDetalle.getInt("cantidad");
                detalleDatos[3] = rsDetalle.getDouble("precio") * rsDetalle.getInt("cantidad");
                detalleDatos[4] = rsDetalle.getInt("codproducto");
                detalle.add(detalleDatos);

            }
        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }
        return detalle;
    }

    public void listarDetalle(ResultSet rsDetalle) {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
//        modelo.addColumn("Cod.");
            modelo.addColumn("Producto");
            modelo.addColumn("Precio");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Subtotal");
//            listaDetalle = new ArrayList();
            while (rsDetalle.next()) {
                Object detalleDatos[] = new Object[5];

//                detalleDatos[0] = rsDetalle.getString("producto");
//                detalleDatos[1] = rsDetalle.getDouble("precio");
//                detalleDatos[2] = rsDetalle.getInt("cantidad");
//                detalleDatos[3] = rsDetalle.getDouble("precio") * rsDetalle.getInt("cantidad");
//                detalleDatos[4] = rsDetalle.getInt("codproducto");
//                listaDetalle.add(detalleDatos);
                modelo.addRow(new Object[]{
                    rsDetalle.getString("producto"),
                    rsDetalle.getDouble("precio"),
                    rsDetalle.getInt("cantidad"),
                    rsDetalle.getDouble("precio") * rsDetalle.getInt("cantidad"),});

            }

            tblDetalle.setModel(modelo);
            alinearTabla(tblDetalle);

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }

    }

    private void txtNroComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroComprobanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroComprobanteActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductoActionPerformed

    public void actualizarDetalle() {
//        System.out.println(txtProducto.getText().split(" ")[0]);

        for (int i = 0; i < tblDetalle.getRowCount(); i++) {
            for (int j = 0; j < tblDetalle.getColumnCount(); j++) {
                if (tblDetalle.getModel().getValueAt(i, j).equals(txtProducto.getText())) {
                    tblDetalle.setValueAt(jsCantidad.getCantidad(), i, j + 2);
                    Object[] datos = (Object[]) listaDetalle.get(i);
                    datos[2] = jsCantidad.getCantidad();
                    Double precio = (Double) tblDetalle.getModel().getValueAt(i, j + 1);
                    tblDetalle.setValueAt(jsCantidad.getCantidad() * precio, i, j + 3);
                    datos[3] = tblDetalle.getModel().getValueAt(i, j + 3);

                }
            }
        }
        listarDetalle(listaDetalle);
        actualizarTotal();
    }

    public Boolean validarDetalle(String producto) {
        for (int i = 0; i < listaDetalle.size(); i++) {
            Object[] datos = (Object[]) listaDetalle.get(i);
            if (datos[0].equals(producto)) {
                return false;
            }
        }
        return true;
    }
    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtPrecioActionPerformed

    public void listarVentas() {
        ResultSet rsLista = null;
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nro");
        model.addColumn("Nro Comprobante");
        model.addColumn("Tipo C");
        model.addColumn("IGV");
        model.addColumn("Subtotal");
        model.addColumn("Total");
        model.addColumn("Fecha");
        model.addColumn("Hora");
        model.addColumn("Cliente");
        model.addColumn("Trabajador");
        tblDatos.setModel(model);
        try {
            rsLista = objVenta.listarVentas();
            while (rsLista.next()) {

                model.addRow(new Object[]{
                    rsLista.getInt("numventa"),
                    rsLista.getString("numcomprobante"),
                    rsLista.getString("tipo"),
                    rsLista.getDouble("igv"),
                    rsLista.getDouble("subtotal"),
                    rsLista.getDouble("total"),
                    rsLista.getDate("fecha"),
                    rsLista.getTime("hora"),
                    rsLista.getString("cliente"),
                    rsLista.getString("trabajador")

                });

            }
            alinearTabla(tblDatos);
        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);
        }
    }
    private void btnBuscar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar3ActionPerformed
        // TODO add your handling code here:
        jdCliente objFrmCliente = new jdCliente(null, true);
        objFrmCliente.setVisible(true);
    }//GEN-LAST:event_btnBuscar3ActionPerformed

    public void alinearTabla(JTable tabla) {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        TableModel tableModel = tabla.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++) {
            tabla.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }
    }
    private void botonMedGradiente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMedGradiente1ActionPerformed
        // TODO add your handling code here:
        try {
            Integer numventa = Integer.parseInt(txtNumero.getText());
            ResultSet rsVentaTemporal = objVenta.buscarVenta(numventa);
            ArrayList detalleEliminar = datosDetalle(objVenta.buscarDetalleVenta(numventa));
            objVenta.modificarVenta(Integer.parseInt(txtNumero.getText()),
                    txtNroComprobante.getText(),
                    obtenerTipoComprobante(),
                    Double.parseDouble(txtIGV.getText()),
                    Double.parseDouble(txtSubTotal.getText()),
                    Double.parseDouble(txtTotal.getText()),
                    sdf.format(jdcFecha.getDate()),
                    horaActual,
                    objCliente.buscarCodClientePorDocumento(txtNroDocumento.getText(), cboTipoDoc.getSelectedItem().toString().charAt(0)),
                    Integer.parseInt(cboTrabajador.getSelectedItem().toString().split("-")[0]),
                    detalleEliminar,
                    listaDetalle);
            new MensajeMed().mostrar(this, "Se modifico correctamente", 2);

            listarVentas();

        } catch (Exception ex) {
            new MensajeMed().mostrar(this, ex.getMessage(), 3);
        }
    }//GEN-LAST:event_botonMedGradiente1ActionPerformed


    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    private void buscarCliente() {
        try {

            ResultSet rsCliente = null;
            rsCliente = objCliente.buscarClientePorDocumento(txtNroDocumento.getText(), cboTipoDoc.getSelectedItem().toString().charAt(0));
            if (rsCliente.next()) {
                txtCliente.setText(rsCliente.getString("nombres") + " " + rsCliente.getString("apellidos"));
            } else {
                new MensajeMed().mostrar(this, "No se encuentra el cliente registrado, por favor registrelo", 0);

                jdCliente objFrmCliente = new jdCliente(null, true);
                objFrmCliente.setVisible(true);

            }

        } catch (Exception ex) {
            new MensajeMed().mostrar(this, ex.getMessage(), 3);
        }
    }

    public void actualizarTotal() {
        Double total = 0.0;
        for (int i = 0; i < tblDetalle.getRowCount(); i++) {
            total += (Double) tblDetalle.getValueAt(i, 3);
            txtTotal.setText(total.toString());
            txtIGV.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) * 0.18));
            txtSubTotal.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) - Double.parseDouble(txtIGV.getText())));
        }
    }

//    private void agregarProducto(ResultSet rsProd, Integer cant) {
//        try {
//
//            if (validarDetalle(txtProducto.getText())) {
//                if (rsProd.next()) {
//                    Object producto[] = new Object[5];
//                    producto[0] = rsProd.getString("nombre");
//                    producto[1] = rsProd.getDouble("precioventa");
//                    producto[2] = cant;
//                    producto[3] = rsProd.getDouble("precioventa") * cant;
//                    producto[4] = rsProd.getInt("codproducto");
//                    listaDetalle.add(producto);
//
//                }
//
//                listarDetalle(listaDetalle);
//                actualizarTotal();
////                txtTotal.setText(String.valueOf(rsProducto.getDouble("precioventa") * jsCantidad.getCantidad()));
////                txtIGV.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) * 0.18));
////                txtSubTotal.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) - Double.parseDouble(txtIGV.getText())));
//
//            } else {
//                JOptionPane.showMessageDialog(this, "El producto ya se encuentre al carrito");
//
//            }
//
//        } catch (Exception ex) {
//            new MensajeMed().mostrar(this, ex.getMessage(), 3);
//        }
//    }
    private void agregarProduto() {
        try {

            if (validarDetalle(txtProducto.getText())) {
                Object producto[] = new Object[5];

                producto[0] = rsProducto.getString("nombre");
                producto[1] = rsProducto.getDouble("precioventa");
                producto[2] = jsCantidad.getCantidad();
                producto[3] = rsProducto.getDouble("precioventa") * jsCantidad.getCantidad();
                producto[4] = rsProducto.getInt("codproducto");
                listaDetalle.add(producto);
                listarDetalle(listaDetalle);
                actualizarTotal();

                new MensajeMed().mostrar(this, "El producto fue agregado correctamente", 2);

//                txtTotal.setText(String.valueOf(rsProducto.getDouble("precioventa") * jsCantidad.getCantidad()));
//                txtIGV.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) * 0.18));
//                txtSubTotal.setText(String.valueOf(Double.parseDouble(txtTotal.getText()) - Double.parseDouble(txtIGV.getText())));
            } else {
                new MensajeMed().mostrar(this, "El producto ya se encuentre al carrito", 0);

            }

        } catch (Exception ex) {
            new MensajeMed().mostrar(this, ex.getMessage(), 3);
        }
    }


    private void tblDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleMouseClicked
        // TODO add your handling code here:
        try {
            txtProducto.setText(String.valueOf(tblDetalle.getValueAt(tblDetalle.getSelectedRow(), 0)));
            jsCantidad.setCantidad(Integer.parseInt(tblDetalle.getValueAt(tblDetalle.getSelectedRow(), 2).toString()));
            txtPrecio.setText(String.valueOf(tblDetalle.getValueAt(tblDetalle.getSelectedRow(), 3)));
            jsCantidad.setPrecio(txtPrecio, Double.parseDouble(txtPrecio.getText()) / jsCantidad.getCantidad());

//        precioProducto(objPro.buscarProductos(txtProducto.getText())); 
        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }


    }//GEN-LAST:event_tblDetalleMouseClicked

    private void txtNroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroDocumentoActionPerformed

    private void txtSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubTotalActionPerformed

    private void txtIGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIGVActionPerformed


    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        try {
            if (btnNuevo.getText().equals("Nuevo")) {
                limpiarControloes();

                btnNuevo.setText("Guardar");
                txtNumero.setText(objVenta.generarNumVenta().toString());
                txtNroComprobante.requestFocus();
            } else {
                btnNuevo.setText("Nuevo");
                if (objVenta.verificarVenta(txtNroComprobante.getText(), obtenerTipoComprobante())) {
                    objVenta.registrarVenta(Integer.parseInt(txtNumero.getText()),
                            txtNroComprobante.getText(),
                            obtenerTipoComprobante(),
                            Double.parseDouble(txtIGV.getText()),
                            Double.parseDouble(txtSubTotal.getText()),
                            Double.parseDouble(txtTotal.getText()),
                            sdf.format(jdcFecha.getDate()),
                            horaActual,
                            objCliente.buscarCodClientePorDocumento(txtNroDocumento.getText(), cboTipoDoc.getSelectedItem().toString().charAt(0)),
                            Integer.parseInt(cboTrabajador.getSelectedItem().toString().split("-")[0]),
                            listaDetalle);
                    new MensajeMed().mostrar(this, "La venta fue registrada correctamente", 2);

                    jdComprobanteVenta objFrm = new jdComprobanteVenta(null, true);
                    objFrm.detalle(Integer.parseInt(txtNumero.getText()));
                    objFrm.setVisible(true);
                    limpiarControloes();

                } else {
                    new MensajeMed().mostrar(this, "El numero de comprobante con el tipo ingresado ya esta registrado", 0);

                }

            }

        } catch (Exception e) {

            new MensajeMed().mostrar(this, e.getMessage(), 3);;
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void limpiarControloes() {
        txtNumero.setText("");
        txtProducto.setText("");
        txtNroComprobante.setText("");
        txtPrecio.setText("");
        jsCantidad.setCantidad(1);
        txtNroDocumento.setText("");
        txtCliente.setText("");
        txtIGV.setText("");
        txtSubTotal.setText("");
        txtTotal.setText("");
        listaDetalle = new ArrayList();
        listarDetalle(listaDetalle);
        listarVentas();

    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Date fechaActual = new Date();
        jdcFecha.setDate(fechaActual);
        listarVentas();
        listarTrabajador();
    }//GEN-LAST:event_formWindowOpened

    private String obtenerTipoComprobante() {

        String tipo[] = cboTipo.getSelectedItem().toString().split(" ");
        if (tipo.length > 1) {
            return (tipo[0].substring(0, 1) + tipo[1].substring(0, 1));
        } else {
            return tipo[0].substring(0, 1);

        }
    }
    private void botonMedGradiente3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMedGradiente3ActionPerformed
        // TODO add your handling code here:
        try {
            int rpta = new MensajeMed().mostrar(this, "Esta seguro de eliminar la venta seleccionada?", 1);
            if (rpta == JOptionPane.YES_OPTION) {
                if (!txtNumero.getText().isEmpty()) {
                    objVenta.eliminarVenta(Integer.parseInt(txtNumero.getText()), datosDetalle(objVenta.buscarDetalleVenta(Integer.parseInt(txtNumero.getText()))));
                    new MensajeMed().mostrar(this, "Se ha eliminado la venta correctamente", 2);

                    limpiarControloes();

                } else {
                    new MensajeMed().mostrar(this, "Por favor ingrese el numero de venta a eliminar", 0);

                }
            }

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);

        }


    }//GEN-LAST:event_botonMedGradiente3ActionPerformed

    private void buscarVenta() {
        try {
            if (!txtNumero.getText().isEmpty()) {
                ResultSet rsVenta = objVenta.buscarVenta(Integer.parseInt(txtNumero.getText()));
                ResultSet rsDetalle = objVenta.buscarDetalleVenta(Integer.parseInt(txtNumero.getText()));
                listaDetalle = datosDetalle(objVenta.buscarDetalleVenta(Integer.parseInt(txtNumero.getText())));

                if (rsVenta.next()) {

                    listarDetalle(listaDetalle);
                    jsCantidad.setPrecio(txtPrecio, precio);

                    jdcFecha.setDate(rsVenta.getDate("fecha"));
                    if (rsVenta.getString("tipo").equals("B")) {
                        cboTipo.setSelectedIndex(0);

                    } else if (rsVenta.getString("tipo").equals("BE")) {
                        cboTipo.setSelectedIndex(1);

                    } else if (rsVenta.getString("tipo").equals("F")) {
                        cboTipo.setSelectedIndex(2);

                    } else {
                        cboTipo.setSelectedIndex(3);

                    }
                    ResultSet rsCliente = objCliente.buscarCliente(rsVenta.getInt("codcliente"));
                    if (rsCliente.next()) {
                        //DNI, Pasaporte, Carnet ExtranjerÃ­a, Libreta Militar

                        if (rsCliente.getString("tipodocumento").equals("D")) {
                            cboTipoDoc.setSelectedIndex(0);
                        } else if (rsCliente.getString("tipodocumento").equals("P")) {
                            cboTipoDoc.setSelectedIndex(1);

                        } else if (rsCliente.getString("tipodocumento").equals("C")) {
                            cboTipoDoc.setSelectedIndex(2);

                        } else {
                            cboTipoDoc.setSelectedIndex(3);

                        }
                        txtNroDocumento.setText(rsCliente.getString("numdocumento"));

                        txtCliente.setText(rsCliente.getString("nombres") + " " + rsCliente.getString("apellidos"));
                    }

                    ResultSet rsTrabajador = objTrabajador.buscar(rsVenta.getInt("codtrabajador"));
                    if (rsTrabajador.next()) {
                        cboTrabajador.setSelectedItem(rsTrabajador.getString("codtrabajador") + "-" + rsTrabajador.getString("nombres") + " " + rsTrabajador.getString("apellidos"));
                    }

                    txtNroComprobante.setText(rsVenta.getString("numcomprobante"));
                    txtTotal.setText(String.valueOf(rsVenta.getDouble("total")));
                    txtIGV.setText(String.valueOf(rsVenta.getDouble("igv")));
                    txtSubTotal.setText(String.valueOf(rsVenta.getDouble("subtotal")));

                }
                alinearTabla(tblDetalle);

            } else {
                new MensajeMed().mostrar(this, "Por favor ingrese el numero de venta", 0);
                txtNumero.requestFocus();

            }

        } catch (Exception e) {
            new MensajeMed().mostrar(this, e.getMessage(), 3);
        }
    }

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
        // TODO add your handling code here:
        txtNumero.setText(tblDatos.getValueAt(tblDatos.getSelectedRow(), 0).toString());
        buscarVenta();
    }//GEN-LAST:event_tblDatosMouseClicked

    private void btnBuscarVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarVentaMouseClicked
        // TODO add your handling code here:

        buscarVenta();
    }//GEN-LAST:event_btnBuscarVentaMouseClicked

    private void btnBuscarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarClienteMouseClicked
        // TODO add your handling code here:
        buscarCliente();
    }//GEN-LAST:event_btnBuscarClienteMouseClicked

    private void btnBuscarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarProductoMouseClicked
        // TODO add your handling code here:
        buscarProducto();
    }//GEN-LAST:event_btnBuscarProductoMouseClicked

    private void btnAgregarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarProMouseClicked
        // TODO add your handling code here:
        agregarProduto();
    }//GEN-LAST:event_btnAgregarProMouseClicked

    private void btnEliminarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarProductoMouseClicked
        // TODO add your handling code here:
        eliminarProducto();

    }//GEN-LAST:event_btnEliminarProductoMouseClicked

    private void botonMedGradiente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMedGradiente2ActionPerformed
        // TODO add your handling code here:
        if (!txtNumero.getText().isEmpty()) {
            jdComprobanteVenta objFrm = new jdComprobanteVenta(null, true);
            objFrm.detalle(Integer.parseInt(txtNumero.getText()));
            objFrm.setVisible(true);
        } else {
            new MensajeMed().mostrar(this, "Por favor ingrese el numero de venta", 0);
            txtNumero.requestFocus();
        }

    }//GEN-LAST:event_botonMedGradiente2ActionPerformed

    private void botonMedGradiente4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMedGradiente4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_botonMedGradiente4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdVenta dialog = new jdVenta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private capaInterfaz.Componentes.BotonMedGradiente botonMedGradiente1;
    private capaInterfaz.Componentes.BotonMedGradiente botonMedGradiente2;
    private capaInterfaz.Componentes.BotonMedGradiente botonMedGradiente3;
    private capaInterfaz.Componentes.BotonMedGradiente botonMedGradiente4;
    private javax.swing.JLabel btnAgregarPro;
    private capaInterfaz.Componentes.BotonMedGradiente btnBuscar3;
    private javax.swing.JLabel btnBuscarCliente;
    private javax.swing.JLabel btnBuscarProducto;
    private javax.swing.JLabel btnBuscarVenta;
    private javax.swing.JLabel btnEliminarProducto;
    private capaInterfaz.Componentes.BotonMedGradiente btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JComboBox<String> cboTipoDoc;
    private javax.swing.JComboBox<String> cboTrabajador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private capaInterfaz.Componentes.spinnerMed jsCantidad;
    private capaInterfaz.Componentes.RoundedPanel roundedPanel1;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTable tblDetalle;
    private capaInterfaz.Componentes.TextoMed txtCliente;
    private capaInterfaz.Componentes.TextoMed txtIGV;
    private capaInterfaz.Componentes.TextoMed txtNroComprobante;
    private capaInterfaz.Componentes.TextoMed txtNroDocumento;
    private javax.swing.JTextField txtNumero;
    private capaInterfaz.Componentes.TextoMed txtPrecio;
    private capaInterfaz.Componentes.TextoMed txtProducto;
    private capaInterfaz.Componentes.TextoMed txtSubTotal;
    private capaInterfaz.Componentes.TextoMed txtTotal;
    // End of variables declaration//GEN-END:variables
}
